service:
  type: ClusterIP
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: lab-issuer
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Registry"
    gethomepage.dev/icon: "docker.png"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  className: "nginx"
  hosts:
    - host: registry.lab.com
      paths:
        - path: /
  tls:
  - secretName: zot-tls
    hosts:
      - registry.lab.com
mountConfig: true
configFiles:
  config.json: |-
    {
      "storage": {
        "rootDirectory": "/var/lib/registry"
      },
      "http": {
        "address": "0.0.0.0",
        "port": "5000"
      },
      "log": {
        "level": "debug"
      },
      "extensions": {
        "search": {
            "enable": true,
            "cve": {
                "updateInterval": "2h"
            }
        },
        "ui": {
            "enable": true
        },
        "mgmt": {
          "enable": true
        },
        "sync": {
          "enable": true,
          "registries": [
            {
              "urls": ["https://k8s.gcr.io"],
              "content": [
                {
                  "prefix": "**", 
                  "destination": "/k8s.gcr.io"
                }
              ],
              "onDemand": true,
              "tlsVerify": true
            },
            {
              "urls": ["https://docker.io/library"],
              "content": [
                {
                  "prefix": "**", 
                  "destination": "/docker.io/library"
                }
              ],
              "onDemand": true,
              "tlsVerify": true
            },
            {
              "urls": ["http://helm-charts-oci-proxy:9000/"],
              "content": [
                {
                  "prefix": "**", 
                  "destination": "/helm"
                }
              ],
              "onDemand": true,
              "tlsVerify": false
            }
          ]
        }
      }
    }