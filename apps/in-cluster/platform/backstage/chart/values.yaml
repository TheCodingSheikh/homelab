backstage:
backstage:
  args:
    - "--config"
    - app-config.yaml
    - "--config"
    - app-config.production.yaml
    - "--config"
    - dynamic-plugins-root/app-config.dynamic-plugins.yaml
  extraEnvVars:
    - name: NODE_EXTRA_CA_CERTS
      value: /etc/ssl/certs/ca.crt
    - name: ORGANIZATION_NAME
      value: Lab
    - name: LIGHTHOUSE_BASEURL
      value: temp
    - name: DYNATRACE_URL
      value: temp
    - name: PERMISSION_ENABLED
      value: "false"
    - name: KEYCLOAK_BASE_URL
      value: "https://sso.lab.com"
    - name: KEYCLOAK_LOGIN_REALM
      value: "master"
    - name: KEYCLOAK_REALM
      value: "lab"
    - name: KEYCLOAK_CLIENT_ID
      value: "backstage"
    - name: KEYCLOAK_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: backstage
          key: KEYCLOAK_CLIENT_SECRET
    - name: K8S_CLUSTER_NAME
      value: "lab"
    - name: K8S_CLUSTER_URL
      value: "https://kubernetes.default.k8s.dev.estishraf.gov.sa"
    - name: K8S_CLUSTER_TOKEN
      valueFrom:
        secretKeyRef:
          name: backstage
          key: K8S_CLUSTER_TOKEN
    - name: APP_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: backstage
          key: APP_SECRET_KEY
    - name: GITHUB_HOST
      value: "github.com"
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: backstage
          key: GITHUB_TOKEN
    - name: host
      valueFrom:
        secretKeyRef:
          name: backstage
          key: host
    - name: port
      valueFrom:
        secretKeyRef:
          name: backstage
          key: port
    - name: user
      valueFrom:
        secretKeyRef:
          name: backstage
          key: user
    - name: password
      valueFrom:
        secretKeyRef:
          name: backstage
          key: password
  image:
    registry: quay.io
    repository: rhdh-community/rhdh
    tag: "1.7"
  extraVolumeMounts:
    - name: dynamic-plugins-root
      mountPath: /opt/app-root/src/dynamic-plugins-root
  extraVolumes:
    - name: dynamic-plugins-root
      emptyDir: {}
    - name: dynamic-plugins
      configMap:
        defaultMode: 420
        name: backstage-dynamic-plugins
        optional: true

  # containerSecurityContext:
  #   readOnlyRootFilesystem: true
  #   allowPrivilegeEscalation: false
  #   capabilities:
  #     drop: ["ALL"]
  #   runAsNonRoot: true
  #   seccompProfile:
  #     type: "RuntimeDefault"
  resources:
    requests:
      cpu: 250m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2.5Gi
      ephemeral-storage: 5Gi
  startupProbe:
    httpGet:
      path: /.backstage/health/v1/liveness
      port: backend
      scheme: HTTP
    initialDelaySeconds: 30
    timeoutSeconds: 4
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 10
  readinessProbe:
    failureThreshold: 10
    httpGet:
      path: /.backstage/health/v1/readiness
      port: backend
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 2
    timeoutSeconds: 4
  livenessProbe:
    failureThreshold: 10
    httpGet:
      path: /.backstage/health/v1/liveness
      port: backend
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 4
  initContainers:
    - name: install-dynamic-plugins
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
        limits:
          cpu: 1000m
          memory: 2.5Gi
          ephemeral-storage: 5Gi
      securityContext:
        # readOnlyRootFilesystem: true
        # allowPrivilegeEscalation: false
        # capabilities:
        #   drop: ["ALL"]
        runAsUser: 0
        # seccompProfile:
        #   type: "RuntimeDefault"
      image: '{{ include "backstage.image" . }}'
      command:
        - ./install-dynamic-plugins.sh
        - /dynamic-plugins-root
      env:
        - name: SKIP_INTEGRITY_CHECK
          value: "true"
        - name: MAX_ENTRY_SIZE
          value: "30000000"
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /dynamic-plugins-root
          name: dynamic-plugins-root
        - mountPath: /opt/app-root/src/dynamic-plugins.yaml
          name: dynamic-plugins
          readOnly: true
          subPath: dynamic-plugins.yaml
      workingDir: /opt/app-root/src
  
  ######
  # App Config
  ######
  installDir: /opt/app-root/src
  appConfig:
    app:
      title: Lab IDP
      baseUrl: https://portal.lab.com

    backend:
      baseUrl: https://portal.lab.com
      cors:
        origin: https://portal.lab.com
    techdocs:
      builder: external

    signInPage: oidc

    integrations:
      github:
        - host: GITHUB_HOST
          token: ${GITHUB_TOKEN}

    proxy:
      skipInvalidProxies: true
      endpoints:
        '/github':
          target: 'https://${GITHUB_HOST}/api/v4'
          secure: false
          headers:
            PRIVATE-TOKEN: ${GITHUB_TOKEN}
        '/k8s':
          target: '${K8S_CLUSTER_URL}/api/v1'
          secure: false
          headers:
            Authorization: Bearer ${K8S_CLUSTER_TOKEN}

    auth:
      environment: production
      session:
        secret: ${APP_SECRET_KEY}

      providers:
        oidc:
          production:
            metadataUrl: ${KEYCLOAK_BASE_URL}/realms/${KEYCLOAK_REALM}/.well-known/openid-configuration
            clientId: "${KEYCLOAK_CLIENT_ID}"
            clientSecret: "${KEYCLOAK_CLIENT_SECRET}"
            prompt: auto
            signIn:
              resolvers:
                - resolver: preferredUsernameMatchingUserEntityName

    catalog:
      providers:
        keycloakOrg:
          default:
            userQuerySize: 500
            groupQuerySize: 200
            maxConcurrency: 1
            
      locations:
        - type: url
          target: https://${GITLAB_HOST}/sre/backstage/blob/master/catalog-entities/all.yaml
        - type: url
          target: https://${GITLAB_HOST}/sre/software-templates/blob/main/templates.yaml

    buildInfo:
      title: 'IDP Build info'
      card:
        Version: 1.7.0
      full: true

    kubernetes:
      customResources:
        - group:    'argoproj.io'
          apiVersion: 'v1alpha1'
          plural:   'applications'

    kubernetesIngestor:
      annotationPrefix: ncai.backstage.io
      components:
        customWorkloadTypes:
          - group: argoproj.io
            apiVersion: v1alpha1
            plural: applications
      
    dynamicPlugins:
      frontend:
        red-hat-developer-hub.backstage-plugin-dynamic-home-page:
          dynamicRoutes:
            - path: /
              importName: DynamicHomePage
          mountPoints:
            - mountPoint: application/listener
              importName: VisitListener
            - mountPoint: home.page/cards
              importName: CatalogStarredEntitiesCard
            - mountPoint: home.page/cards
              importName: TemplateSection
            - mountPoint: home.page/cards
              importName: FeaturedDocsCard
            - mountPoint: home.page/cards
              importName: RecentlyVisitedCard
              config:
                layouts:
                  xl: { w: 6, h: 4, x: 6 }
                  lg: { w: 6, h: 4, x: 6 }
                  md: { w: 6, h: 4, x: 6 }
                  sm: { w: 6, h: 4, x: 6 }
                  xs: { w: 6, h: 4, x: 6 }
                  xxs: { w: 6, h: 4, x: 6 }
            - mountPoint: home.page/cards
              importName: TopVisitedCard
              config:
                layouts:
                  xl: { w: 6, h: 4 }
                  lg: { w: 6, h: 4 }
                  md: { w: 6, h: 4 }
                  sm: { w: 6, h: 4 }
                  xs: { w: 6, h: 4 }
                  xxs: { w: 6, h: 4 }

        red-hat-developer-hub.backstage-plugin-global-header:
          mountPoints:
            - mountPoint: application/header
              importName: GlobalHeader
              config:
                position: above-sidebar # above-main-content | above-sidebar
            - mountPoint: global.header/component
              importName: CompanyLogo
              config:
                priority: 200
                props:
                  to: '/'
            - mountPoint: global.header/component
              importName: SearchComponent
              config:
                priority: 100
            - mountPoint: global.header/component
              importName: Spacer
              config:
                priority: 99
                props:
                  growFactor: 0
            - mountPoint: global.header/component
              importName: HeaderIconButton
              config:
                priority: 90
                props:
                  title: Self-service
                  icon: add
                  to: create
            - mountPoint: global.header/component
              importName: StarredDropdown
              config:
                priority: 85
            
            - mountPoint: global.header/component
              importName: NotificationButton
              config:
                priority: 70
            - mountPoint: global.header/component
              importName: Divider
              config:
                priority: 50
            - mountPoint: global.header/component
              importName: ProfileDropdown
              config:
                priority: 10
            - mountPoint: global.header/profile
              importName: MenuItemLink
              config:
                priority: 100
                props:
                  title: Settings
                  link: /settings
                  icon: manageAccounts
            - mountPoint: global.header/profile
              importName: MenuItemLink
              config:
                priority: 90
                props:
                  title: My profile
                  icon: account
            - mountPoint: global.header/profile
              importName: LogoutButton
              config:
                priority: 10
                
        default.main-menu-items:
          menuItems:
            default.learning-path:
              enabled: false
            default.create:
              title: 'Self Service'
ingress:
  enabled: true
  className: "nginx"
  host: "portal.lab.com"
  tls:
    enabled: true
    secretName: "backstage-tls"
